import lejos.nxt.Button;
import lejos.nxt.Motor;
import lejos.nxt.SensorPort;
import lejos.nxt.UltrasonicSensor;
import lejos.robotics.RegulatedMotor;
import lejos.robotics.subsumption.Arbitrator;
import lejos.robotics.subsumption.Behavior;

public class Scout
{
  static RegulatedMotor leftMotor = Motor.A;
  static RegulatedMotor rightMotor = Motor.C;

  public static void main(String[] args)
  {
    leftMotor.setSpeed(400);
    rightMotor.setSpeed(400);
    Behavior b1 = new DriveForward();
    Behavior b2 = new DetectEnemy();
    Behavior[] behaviorList =
    {
      b1, b2
    };
    Arbitrator arbitrator = new Arbitrator(behaviorList);
    Button.waitForAnyPress();
    arbitrator.start();
  }
}

class DriveForward implements Behavior
{

  private boolean _suppressed = false;

  public boolean takeControl()
  {
    return true;  
  }

  public void suppress()
  {
    _suppressed = true;
  }

  public void action()
  {
    _suppressed = false;
    Scout.leftMotor.forward();
    Scout.rightMotor.forward();
    while (!_suppressed)
    {
      Thread.yield(); 
    }
    Scout.leftMotor.stop(); 
    Scout.leftMotor.stop();
  }
}


class DetectEnemy implements Behavior
{

  public DetectEnemy()
  {
    sonar = new UltrasonicSensor(SensorPort.S3);
  }

  public boolean takeControl()
  {
    sonar.ping();
    return sonar.getDistance() < 25;
  }

  public void suppress()
  {
     
  }

  public void action()
  {
    Scout.leftMotor.rotate(-180, true);
    Scout.rightMotor.rotate(-360);  
  }
  
  private UltrasonicSensor sonar;
}